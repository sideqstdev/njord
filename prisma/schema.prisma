// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Profile { // seperate public info about a user from their (mostly) private account info
  id String  @default(uuid()) @id
  bio String?
  tags String[]
  lolName String?
  avatarUrl String?

  // relational fields
  user User? @relation(fields: [userId], references: [id])
  userId String? @unique

  // stats
  level Int @default(0) // levels are gained by hitting point thresholds
  points Int @default(0) // total points gained
  wins Int @default(0) // how many tournament wins
  entered Int @default(0) // how many tournaments they have entered
  hosted Int @default(0) // how many tournaments hosted
}

model User {
  id  String @default(uuid()) @id 
  created DateTime @default(now())
  updated DateTime @updatedAt
  lastLogin DateTime @default(now())
  version Int @default(1)

  // personal info
  name String?
  gamerTag String @unique
  email String @unique
  password String
  suspended Boolean @default(false)
  verified Boolean @default(false)
  // confirmed Boolean @default(false) // email verification

  // relational fields
  profile Profile?
  posts Post[]
}

model Post {
  id String @default(uuid()) @id
  created DateTime @default(now())
  updated DateTime @updatedAt
  content String?
  imageUrl String?
  tags String[]

  // relational fields
  user User? @relation(fields: [userId], references: [id]) // post owner
  userId String? // post owner id
}

enum TournamentRole {
  ATTENDEE
  MOD
  ADMIN
}
