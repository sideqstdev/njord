// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Follower {
  id String @default(uuid()) @id
  created DateTime @default(now())
  profile Profile @relation(fields: [profileId], references: [id]) // follower ID
  profileId String
}

model Following {
  id String @default(uuid()) @id
  created DateTime @default(now())
  profile Profile @relation(fields: [profileId], references: [id])
  profileId String
}

model Friend {
  id String @default(uuid()) @id
  added DateTime @default(now())
  profileId String
  friendProfileId String
  profile Profile @relation(name: "profile", fields: [profileId], references: [id])
  friend Profile @relation(name: "friend", fields: [friendProfileId], references: [id])
}

model Profile {
  id String  @default(uuid()) @id
  bio String?
  tags String[]
  lolName String
  avatar String?
  followerCount Int @default(0)
  followingCount Int @default(0)
  followers Follower[]
  following Following[]
  userFriends Friend[] @relation(name: "profile")
  friendFriends Friend[] @relation(name: "friend")
  user User @relation(fields: [userId], references: [id])
  userId String @unique

  level Int @default(0) // levels are gained by hitting point thresholds
  points Int @default(0) // total points gained
  wins Int @default(0) // how many tournament wins
  entered Int @default(0) // how many tournaments they have entered
  hosted Int @default(0) // how many tournaments hosted
}

model User {
  id  String @default(uuid()) @id 
  created DateTime @default(now())
  updated DateTime @updatedAt
  lastLogin DateTime
  version Int @default(1)

  name String?
  gamerTag String @unique
  email String @unique
  password String
  suspended Boolean @default(false)

  verified Boolean @default(false)
  profile Profile?
}
